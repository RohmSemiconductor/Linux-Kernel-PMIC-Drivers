IC_NAME=bd71837
IC_MODULES=(bd718x7-regulator rohm-bd718x7 clk-bd718x7)

I2C_SLAVE=0x4b

ALL_BUCKS=(buck1 buck2 buck3 buck4 buck5 buck6 buck7 buck8)
ALL_LDOS=(ldo1 ldo2 ldo3 ldo4 ldo5 ldo6 ldo7)
DTS_PATH=/proc/device-tree/ocp/interconnect\@48000000/segment\@0/target-module\@2a000/i2c\@0/pmic\@4b/regulators

#First 8 regulators are bucks. First LDO is regulator 9
LDO_START=9

#Buck 6 and 7 are parents
BUCK_IS_PARENT=(x 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0)

#
# AIN measurements seem to be unreliable. It may be this would need some
# delay, better cabling or capacitor or <add hack here> to work reliably.
# Truth is this aims to be SW test, not a HW test. Thus I see little value
# in measuring the actual voltage Vs. "just" checking the raw register
# value using the I2Ctools and ensuring the framework and driver have added
# expected configurations. Hence I just drop the AIN test instead of working
# to make it more reliable.
#
#Bucks which are connected to BBB AIN for voltage measurement
#MEASURETEST_BUCKS=(buck1 buck3 buck5 buck8 ldo4)
MEASURETEST_BUCKS=()

#AIN pins matching BUCKs abowe
#MEASURETEST_AINS=(0 1 2 3 4)
MEASURETEST_AINS=()

#On BD71837 only bucks 1-4 support DVS
DVS_BUCKS=(buck1 buck2 buck3 buck4)

#Buck 3 and 4 states need to be read from register - other regulators are
#enabled at RUN state when under HW control
HW_CTRL_ON=(x $HW_CTRL_STATE_ON $HW_CTRL_STATE_ON $HW_CTRL_STATE_IC_SPECIFIC $HW_CTRL_STATE_IC_SPECIFIC $HW_CTRL_STATE_ON $HW_CTRL_STATE_ON $HW_CTRL_STATE_ON $HW_CTRL_STATE_ON $HW_CTRL_STATE_ON $HW_CTRL_STATE_ON $HW_CTRL_STATE_ON $HW_CTRL_STATE_ON $HW_CTRL_STATE_ON $HW_CTRL_STATE_ON $HW_CTRL_STATE_ON)

#
#Registers
#
BUCK_DISABLE_REG=(0 0x05 0x06 0x07 0x08 0x09 0x0a 0x0b 0x0c 0x18 0x19 0x1a 0x1b 0x1c 0x1d 0x1e)
BUCK_VOLT_REGS=(0 0x0D 0x10 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19 0x1a 0x1b 0x1c 0x1d 0x1e)

BUCK_VOLT_MASKS=(x 0x3F 0x3F 0x3F 0x3F 0x87 0x3 0x7 0x3F 0x23 0x20 0xF 0xF 0xF 0xF 0xF)

BUCK_CONTROLLED_MASK=2
BUCK_ENABLE_MASK=1
LDO_CONTROLLED_MASK=0x80
LDO_ENABLE_MASK=0x40

declare -a BUCK1_VOLT_REGVAL
declare -a BUCK2_VOLT_REGVAL
declare -a BUCK5_VOLT_REGVAL
declare -a BUCK6_VOLT_REGVAL

#List buck voltages in units of millivolts to make it easier to read the values
#Multiply them to get microvolts as driver expects

BUCK_VOLT_MULTIPLIER=1000
BUCK1_VOLTAGES=(700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990 1000 1010 1020 1030 1040 1050 1060 1070 1080 1090 1100 1110 1120 1130 1140 1150 1160 1170 1180 1190 1200 1210 1220 1230 1240 1250 1260 1270 1280 1290 1300)
BUCK2_VOLTAGES=(700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990 1000 1010 1020 1030 1040 1050 1060 1070 1080 1090 1100 1110 1120 1130 1140 1150 1160 1170 1180 1190 1200 1210 1220 1230 1240 1250 1260 1270 1280 1290 1300)
BUCK3_VOLTAGES=(700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990 1000 1010 1020 1030 1040 1050 1060 1070 1080 1090 1100 1110 1120 1130 1140 1150 1160 1170 1180 1190 1200 1210 1220 1230 1240 1250 1260 1270 1280 1290 1300)
BUCK4_VOLTAGES=(700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990 1000 1010 1020 1030 1040 1050 1060 1070 1080 1090 1100 1110 1120 1130 1140 1150 1160 1170 1180 1190 1200 1210 1220 1230 1240 1250 1260 1270 1280 1290 1300)
BUCK5_VOLTAGES=(   700 800 900 1000 1050 1100 1200 1350 675  775  875  975  1025 1075 1175 1325)
BUCK5_VOLT_REGVAL=(0x0 0x1 0x2 0x3  0x4  0x5  0x6  0x7  0x80 0x81 0x82 0x83 0x84 0x85 0x86 0x87)
BUCK6_VOLTAGES=(3000 3100 3200 3300)
BUCK6_VOLT_REGVAL=(0x0 0x1 0x2 0x3)

BUCK7_VOLTAGES=(1605 1695 1755 1800 1845 1905 1950 1995)
BUCK8_VOLTAGES=(800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990 1000 1010 1020 1030 1040 1050 1060 1070 1080 1090 1100 1110 1120 1130 1140 1150 1160 1170 1180 1190 1200 1210 1220 1230 1240 1250 1260 1270 1280 1290 1300 1310 1320 1330 1340 1350 1360 1370 1380 1390 1400)

LDO1_VOLTAGES=(3000 3100 3200 3300 1600 1700 1800 1900)
LDO1_VOLT_REGVAL=(0x0 0x1 0x2 0x3 0x20 0x21 0x22 0x23)

LDO2_VOLTAGES=(900 800)
LDO2_VOLT_REGVAL=(0x0 0x20)
LDO3_VOLTAGES=(1800 1900 2000 2100 2200 2300 2400 2500 2600 2700 2800 2900 3000 3100 3200 3300)

LDO4_VOLTAGES=(900 1000 1100 1200 1300 1400 1500 1600 1700 1800)
LDO5_VOLTAGES=(1800 1900 2000 2100 2200 2300 2400 2500 2600 2700 2800 2900 3000 3100 3200 3300)
LDO5_VOLT_REGVAL=(0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7 0x8 0x9 0xA 0xB 0xC 0xD 0xE 0xF)

LDO6_VOLTAGES=(900 1000 1100 1200 1300 1400 1500 1600 1700 1800)

LDO7_VOLTAGES=(1800 1900 2000 2100 2200 2300 2400 2500 2600 2700 2800 2900 3000 3100 3200 3300)
LDO7_VOLT_REGVAL=(0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7 0x8 0x9 0xA 0xB 0xC 0xD 0xE 0xF)

VOLTAGE_ARRAY_NAMES=(x BUCK1_VOLTAGES BUCK2_VOLTAGES BUCK3_VOLTAGES BUCK4_VOLTAGES BUCK5_VOLTAGES BUCK6_VOLTAGES BUCK7_VOLTAGES BUCK8_VOLTAGES LDO1_VOLTAGES LDO2_VOLTAGES LDO3_VOLTAGES LDO4_VOLTAGES LDO5_VOLTAGES LDO6_VOLTAGES LDO7_VOLTAGES)
VOLT_REG_ARRAY_NAMES=(x BUCK1_VOLT_REGVAL BUCK2_VOLT_REGVAL BUCK3_VOLT_REGVAL BUCK4_VOLT_REGVAL BUCK5_VOLT_REGVAL BUCK6_VOLT_REGVAL BUCK7_VOLT_REGVAL BUCK8_VOLT_REGVAL LDO1_VOLT_REGVAL LDO2_VOLT_REGVAL LDO3_VOLT_REGVAL LDO4_VOLT_REGVAL LDO5_VOLT_REGVAL LDO6_VOLT_REGVAL LDO7_VOLT_REGVAL)
#For bucks where register value is in a form 1,2,..N it's
#convenient to initialize regval array using loop.
#Not so readable but easier than typing. (hashtag)Lazy me.

function init_volt_regvals() {
	local i
	for i in ${!BUCK1_VOLTAGES[*]}
	do
		BUCK1_VOLT_REGVAL[$i]=$i
	done
	for i in ${!BUCK2_VOLTAGES[*]}
	do
		BUCK2_VOLT_REGVAL[$i]=$i
	done
	for i in ${!BUCK3_VOLTAGES[*]}
	do
		BUCK3_VOLT_REGVAL[$i]=$i
	done
	for i in ${!BUCK4_VOLTAGES[*]}
	do
		BUCK4_VOLT_REGVAL[$i]=$i
	done
	for i in ${!BUCK7_VOLTAGES[@]}
	do
		BUCK7_VOLT_REGVAL[$i]=$i
	done
	for i in ${!BUCK8_VOLTAGES[@]}
	do
		BUCK8_VOLT_REGVAL[$i]=$i
	done
	for i in ${!LDO3_VOLTAGES[@]}
	do
		LDO3_VOLT_REGVAL[$i]=$i
	done
	for i in ${!LDO4_VOLTAGES[@]}
	do
		LDO4_VOLT_REGVAL[$i]=$i
	done
	for i in ${!LDO6_VOLTAGES[@]}
	do
		LDO6_VOLT_REGVAL[$i]=$i
	done
}

#Note - this only works for buck3 and 4
#other bucks should be enabled at hwctrl
function bd71837_buck_on_at_hwctrl_raw() {
	local MASK=4
	local BUCK=$1
	local BUCK_NO=$(get_linear_buckno $b)
	local REG=${BUCK_DISABLE_REG[$BUCK_NO]}
	local regval=`i2cget -y -f 1 0x4b $REG`
	local RV=$?

	if [ $(( $regval & $MASK )) -eq $MASK ]
	then
		echo 1
	else
		echo 0
	fi
}

function IC_SPECIFIC_init() {
	init_volt_regvals
}

function IC_SPECIFIC_buck_on_at_hwctrl_raw()
{
	bd71837_buck_on_at_hwctrl_raw $1
}
